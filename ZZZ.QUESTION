1. Thread vs fork
  - We see many advantages of thread against "process", but in TCP server model, using "fork" is more popular?
  - Someone says that thread may be faster process, how do you think and why?
  - fork: what is remained, what is vannished?
  - fork: what is defunct process, "zombie", SIGCHLD, waitpid?

2. Can we share a linked-list beween processes?
3. Can we have/create another data structure is better linked-list, so-called "vector/list" in pure/ANSI C?
4. Can we we shared so-called “vector” in C?
5. Mutex - Semaphore
  - Can we put mutex/sem into shared memory.
6. In C++, can we share directly a class, a vector/list, ... between multi-processes?
  - How about with poiter member?
7. Except data/text/stack/heap area of memories, can we have another area? 
8. Can we send 1000 messages a second with msg_queue? How can we do with 1000 messages a second?
9. Can we create a so-called "vector" which contain any data structure? Think about UTF-8 by Ken Thompson
10. Garbage collection is very important feature of Java/C#/..., how do you manipulate this problem in C/C++?

