diff --git a/notify.system/client.c b/notify.system/client.c
index 420a029..e681c1e 100644
--- a/notify.system/client.c
+++ b/notify.system/client.c
@@ -125,24 +125,22 @@ int main(int argc, char *argv[]) {
 				}
 			} else if(enc == ENCRYPT_AES) {
 				//thuannt 02
-				err = msg_aes_dec(buffer, bufout, aes256_key, aes256_iv, n, &n, MAX_MSG + 1); 
+				err = msg_aes_dec(buffer, bufout, aes256_key, 
+								aes256_iv, n, &n, MAX_MSG + 1); 
 				if(err) {
 					n = 0;
 					continue;
 				}
 				p = bufout;
 			} else if( enc == 0) {
-				fprintf(stdout, "HAVE NO ENC=================.\n");
 			}
 			dt = (MSG_DATA *)p;
 			msg = (MSG_COMMON*) p;
 
-			fprintf(stdout, "\n===========\nn: %d, ifroute: %d\n=================\n", n, msg->ifroute);
-			fprintf(stdout, "\n===========\nn: %d, data: \n%s\n=================\n", n, dt->data);
 			if(msg->ifroute == G_NTF_CLI) {
 				DUM_MSG(msg); 
 				DUM_IPV4(&fbaddr);
-				msg->ifroute = G_CLI_NTF;
+				msg->ifroute = F_NTF_CLI;
 				memset(msg->len, 0, LEN_U16INT);
 				send_msg_fb(msg, argv[1]);
 			}
@@ -198,7 +196,8 @@ int send_msg_fb( MSG_COMMON *msg, char *ip) {
 		//addr->sin_port = htons(PORT);
 		DUM_IPV4(&addr);
 		//nttthuan
-		err = msg_aes_enc((char *)msg, buffer, aes256_key, aes256_iv, len, &n, MAX_MSG + 1);  
+		err = msg_aes_enc((char *)msg, buffer, aes256_key, 
+				aes256_iv, len, &n, MAX_MSG + 1);  
 		if(err) {
 			break;
 		}
diff --git a/notify.system/msg_notify.c b/notify.system/msg_notify.c
index d5ea6fd..8006e04 100644
--- a/notify.system/msg_notify.c
+++ b/notify.system/msg_notify.c
@@ -10,6 +10,8 @@
 
 
 //https://wiki.openssl.org/index.php/EVP_Authenticated_Encryption_and_Decryption
+//https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation
+//https://en.wikipedia.org/wiki/Galois/Counter_Mode
 static int gcm_encrypt(unsigned char *plaintext, int plaintext_len,
                 unsigned char *aad, int aad_len,
                 unsigned char *key,
@@ -158,6 +160,7 @@ unsigned int hash_func(char *id, int n)
 		res += (id[i] * k) % HASH_SIZE; 
 	}
 	res = res % HASH_SIZE;
+	//return 1; //To test linked list
 	return res;
 }
 
@@ -186,7 +189,6 @@ int reg_to_table(MSG_REGISTER *msg, int n, struct timespec *t)
 	HASH_ITEM *hitem = 0;
 	int rc = 0;
 	int len = 0;
-	int sz = n;
 
 	com = &(msg->com);
 	len = MIN(MAX_MSG, strlen(com->dev_id));
@@ -210,7 +212,8 @@ int reg_to_table(MSG_REGISTER *msg, int n, struct timespec *t)
 			hitem = hi->group;
 			while (hitem)
 			{
-				int k = strncmp(com->dev_id, hitem->msg->com.dev_id, LEN_DEVID);
+				int k = 0;
+				k = strncmp(com->dev_id, hitem->msg->com.dev_id, LEN_DEVID);
 				put_time_to_msg(com, t);
 				if (!k)
 				{
@@ -234,7 +237,7 @@ int reg_to_table(MSG_REGISTER *msg, int n, struct timespec *t)
 			}
 			MY_MALLOC(hitem->msg ,sizeof(HASH_ITEM));
 			memcpy(hitem->msg, (char*) msg, n);
-			put_pubkey_msg(hitem->msg, &sz);	
+			//put_pubkey_msg(hitem->msg, &sz);	
 			hi->n += 1;
 			hitem->next = hi->group;
 			hi->group = hitem;
@@ -253,7 +256,7 @@ int reg_to_table(MSG_REGISTER *msg, int n, struct timespec *t)
 				break;
 			}
 			memcpy(hitem->msg, (char*) msg, n);
-			put_pubkey_msg(hitem->msg, &sz);	
+			//put_pubkey_msg(hitem->msg, &sz);	
 			hi->n = 1;
 			hi->group = hitem;
 			res = 1;
@@ -577,6 +580,9 @@ int send_to_dst(int sockfd, HASH_ITEM **l, int *count, char clear)
 		if (hi->msg->com.ifroute == G_NTF_CLI ) {
 			iid = hi->msg->com.dev_id;
 		}
+		else if (hi->msg->com.ifroute == F_NTF_CLI ) {
+			iid = hi->msg->com.ntf_id;
+		}
 		else if (hi->msg->com.ifroute == F_SRV_CLI ) {
 			iid = hi->msg->com.dev_id;
 		}
diff --git a/notify.system/msg_notify.h b/notify.system/msg_notify.h
index 21aa1f3..becc5d5 100644
--- a/notify.system/msg_notify.h
+++ b/notify.system/msg_notify.h
@@ -27,15 +27,15 @@
 #define MAX_PATH		(2048)	
 
 #define MY_MALLOC(p, n) {(p)=malloc(n); if(p){memset(p,0,n); syslog(LOG_INFO, "- File: %s, func: %s, line: %d, malloc p: %p, n: %d", __FILE__, __FUNCTION__, __LINE__, p, (n)); } else { syslog(LOG_ALERT, "- File: %s, func: %s, line: %d, Memory Error.", __FILE__, __FUNCTION__, __LINE__); exit(1); } }
-#define MY_FREE(p) {free((p)); syslog(LOG_INFO, "- File: %s, func: %s, line: %d, free p: %p\n", __FILE__, __FUNCTION__, __LINE__, (p)); p = 0;}
+#define MY_FREE(p) {if(p){free((p)); (p)=0;} syslog(LOG_INFO, "- File: %s, func: %s, line: %d, free p: %p\n", __FILE__, __FUNCTION__, __LINE__, (p));}
 
 #define LOG 		syslog
 
-#define LEN_DEVID 			(40) 
+#define LEN_DEVID 			(36) 
 #define LEN_U64INT 			(8) 
 #define LEN_U32INT 			(4) 
 #define LEN_U16INT 			(2) 
-#define MAX_MSG 			(1200) 
+#define MAX_MSG 			(1280) 
 #define uchar				unsigned char
 #define cchar				const char
 #define cuchar				const unsigned char
@@ -101,14 +101,13 @@ typedef struct {
 //1: Tracking msg 
 //2: Notifying msg 
 //3: Confirming msg 
-	unsigned char type;
-	unsigned char ifroute;
-	char dev_id[LEN_DEVID];
-	//notifier ID
-	char ntf_id[LEN_DEVID];
-	unsigned char second[LEN_U64INT];
-	unsigned char nano[LEN_U64INT];
-	unsigned char len[LEN_U16INT];
+	uchar type;
+	uchar ifroute;
+	char dev_id[LEN_DEVID + 1];
+	char ntf_id[LEN_DEVID + 1];
+	uchar second[LEN_U64INT];
+	uchar nano[LEN_U64INT];
+	uchar len[LEN_U16INT];
 } MSG_COMMON;
 
 typedef struct {
diff --git a/notify.system/notifier.c b/notify.system/notifier.c
index 363a614..bff8d42 100644
--- a/notify.system/notifier.c
+++ b/notify.system/notifier.c
@@ -35,6 +35,7 @@ void notifier(char *ip) {
 	char buffer[MAX_MSG + 1];
 	char bufout[MAX_MSG + 1];
 	uchar *p = 0;
+	fprintf(stdout, "strlen: %d\n", strlen(id));
 	do {
 		memset(buffer, 0, sizeof(buffer));
 		memset(bufout, 0, sizeof(bufout));
@@ -103,6 +104,7 @@ int main(int argc, char *argv[]) {
 	int count = 0;
 	int err = 0;
 	
+	fprintf(stdout, "\nstrlen: %d==============\n", strlen(id));
 	setlogmask (LOG_UPTO (LOG_INFO));
 	openlog ("znotifier", LOG_CONS | LOG_PID | LOG_NDELAY, LOG_LOCAL1);
 
diff --git a/notify.system/server.c b/notify.system/server.c
index c906264..c7c96fd 100644
--- a/notify.system/server.c
+++ b/notify.system/server.c
@@ -350,7 +350,8 @@ int main(int argc, char *argv[]) {
 		}
 		msg = (MSG_COMMON*) pglobal;	
 		DUM_MSG(msg);
-		if(msg->ifroute == G_NTF_CLI || msg->ifroute == G_CLI_NTF) {
+		if(msg->ifroute == G_NTF_CLI || msg->ifroute == G_CLI_NTF || 
+				msg->ifroute == F_NTF_CLI || msg->ifroute == F_CLI_NTF) {
 			if(msg->type == MSG_NTF) {
 				int err = 0;
 				//uint16_t k = 0;
